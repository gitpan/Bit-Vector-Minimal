NAME
    Bit::Vector::Minimal - Object-oriented wrapper around vec()

SYNOPSIS
      use Bit::Vector::Minimal;
      my $vec = new Bit::Vector (size => 8, width => 1, endianness => "little");
                                 # These are the defaults

      $vec->set(1); # $vec's internal vector now looks like "00000010"
      $vec->get(3); # 0

DESCRIPTION
    This is a much simplified, lightweight version of Bit::Vector, and wraps
    Perl's (sometimes confusing) "vec" function in an object-oriented
    abstraction.

METHODS
  new
    Creates a new bit vector. By default, this creates a one-byte vector
    with 8 one-bit "slots", with bit zero on the right of the bit pattern.
    These settings can be changed by passing parameters to the constructor:
    "size" will alter the size in bits of the vector; "width" will alter the
    width of the slots. The module will die if "width" is not an integer
    divisor of "size". "endianness" controls whether the zeroth place is on
    the right or the left of the bit vector.

  set(POS[, VALUE])
    Sets the bit or slot at position "POS" to value "VALUE" or "all bits on"
    if "VALUE" is not given.

  get(POS)
    Returns the bit or slot at position "POS".

SEE ALSO
    Bit::Vector

AUTHOR
    Simon Cozens, <simon@kasei.com>

COPYRIGHT AND LICENSE
    Copyright 2003 by Kasei

    This library is free software; you can redistribute it and/or modify it
    under the same terms as Perl itself.

